<%
    function indent(string, n){
        var spaces = '';
        for(var i = 0; i < n; i++){
            spaces += ' ';
        }
        return string.replace(/\n/g, '\n'+spaces);
    }
%>(function(){
    var modules = {};
    function setter(){ throw new Error('Cannot manually set module property'); }
    function setModule(name, factory){
        if(modules.hasOwnProperty(name)){
            throw new Error('Module '+name+' already exists.');
        }
        var module;
        Object.defineProperty(modules, name, {
            get: function(){
                if(module) {
                    return module;
                }
                if(factory.busy) {
                    throw new Error('Cyclic dependency detected on module '+name);
                }
                factory.busy = true;
                module = factory();
                factory.busy = false;
                return module;
            },
            set: setter
        });
    }
    with(modules){<%
        if(options.prepend.length){
        %>
        (function(modules, module, exports, setModule, setter){<%
            _.each(options.prepend, function(prepend){
            %>
            <%= indent(prepend, 12) %><%
            });%>
        })(modules, undefined, undefined, undefined, undefined);<% } %><%
        _.forOwn(modules, function(content, name){
        %>
        setModule('<%= name %>', function(){
            var module = {}, exports = module.exports = {};
            (function(modules, module, exports, setModule, setter){
                <%= indent(content, 16) %><%
                if(options.autoexports){
                %>
                module.exports = <%= name %>;
                <% }%>
            })(modules, module, exports, undefined, undefined);
            return module.exports;
        });<% }); %><%
        if(options.append.length){
        %>
        (function(modules, module, exports, setModule, setter){<%
            _.each(options.append, function(append){
            %>
            <%= indent(append, 12) %><%
            });%>
        })(modules, undefined, undefined, undefined, undefined);<% } %>
    }<%
    if(options.exports){
    %><%
    var module = options.exports === true ? 'modules' : "modules['"+ options.exports +"']";
    %>
    if(typeof module !== 'undefined' && module.exports){
        module.exports = <%= module %>;
    } else {<%
        var name = options.exportsname || ( options.exports === true ? 'modules' : options.exports )
        %>
        this['<%= name %>'] = <%= module %>;
    }<% } %>
}).call(this);